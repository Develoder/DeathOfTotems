using UnityEngine;

/// <summary>
/// ?????????? ????????? ??????? ??? ?????? ??????? ? ????????? ???????? Damageable
/// Displays a configurable health bar for any object with a Damageable as a parent
/// </summary>
public class HealthBar : MonoBehaviour
{

    private MaterialPropertyBlock matBlock;
    private MeshRenderer meshRenderer; // ?????? ?? ???? ???????????
    private Transform mainCamera; // ?????? ?? ??????
    [SerializeField] private Transform transformParent; // ??????? ?? ????????? Transform ????????

    private float curentHealth; // ??????? ????????
    private float maxHealth; // ???????????? ????????
    private Vector3 positionHelaBar; // ??????? ????? ???????
    private Vector3 forward; // forward
    private Vector3 up; // up


    // ????????? ???????????
    [SerializeField] private float offset = 1f; // ???????? ???????? ?? ?????? ???????????? ????????????? ???????
    [SerializeField] private float timeDisplay = 2f; // ????? ???????????
    private float curentTimeDisplay; // ??????? ????? ???????? ??????????

    private void Awake()
    {
        meshRenderer = GetComponent<MeshRenderer>();
        matBlock = new MaterialPropertyBlock();
        meshRenderer.enabled = false;
    }

    private void Start()
    {
        // ??????????? ??????
        mainCamera = Camera.main.transform;
    }

    private void Update()
    {
        // ???????? ?? ?????????? ????? ???????????
        if (curentTimeDisplay > 0)
        {
            UpdateParams();
            AlignCamera();
            curentTimeDisplay -= Time.deltaTime;
            meshRenderer.enabled = true;
        }
        else
        {
            meshRenderer.enabled = false;
        }
    }

    // ????????? ?? ?????? ???????
    public void DisplayHealthBar(float curentHealth, float maxGealth)
    {
        this.curentHealth = curentHealth;
        this.maxHealth = maxGealth;
        curentTimeDisplay = timeDisplay;
    }

    // ?????????? ????????? ???????
    private void UpdateParams()
    {
        meshRenderer.GetPropertyBlock(matBlock);
        matBlock.SetFloat("_Fill", curentHealth / maxHealth);
        meshRenderer.SetPropertyBlock(matBlock);
    }

    // ??????? HitBar ? ??????? ??????
    private void AlignCamera()
    {
        if (mainCamera != null)
        {
            // ????????? ???????? ??????? ? ??????? ??????
            forward = transform.position - mainCamera.position;
            forward.Normalize();
            up = Vector3.Cross(forward, mainCamera.right);
            transform.rotation = Quaternion.LookRotation(forward, up);

            // ????????? ????????? ??????? ???????????? ????????????? ???????
            positionHelaBar.y = transformParent.position.y + offset;
            positionHelaBar.z = transformParent.position.z;
            transform.position = positionHelaBar;
        }
    }

}